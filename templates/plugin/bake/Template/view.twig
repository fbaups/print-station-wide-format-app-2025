{#
/**
 * CakePHP(tm) : Rapid Development Framework (http://cakephp.org)
 * Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)
 *
 * Licensed under The MIT License
 * For full copyright and license information, please see the LICENSE.txt
 * Redistributions of files must retain the above copyright notice.
 *
 * @copyright     Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)
 * @link          http://cakephp.org CakePHP(tm) Project
 * @since         2.0.0
 * @license       http://www.opensource.org/licenses/mit-license.php MIT License
 */
#}
<?php
/**
 * @var \{{ namespace }}\View\AppView $this
 * @var \{{ entityClass }} ${{ singularVar }}
 */

$this->set('headerShow', true);
$this->set('headerIcon', __(""));
$this->set('headerTitle', __('{{ action|humanize }} {{ singularHumanName }}'));
$this->set('headerSubTitle', __(""));

//control what Libraries are loaded
$coreLib = [
'bootstrap' => true,
'datatables' => false,
'feather-icons' => true,
'fontawesome' => true,
'jQuery' => true,
'jQueryUI' => false,
];
$this->set('coreLib', $coreLib);

?>

<?php
$this->append('backLink');
?>
<div class="p-0 m-1 float-end">
        <?= $this->Html->link(__('&larr; Back to {{ pluralHumanName }}'), ['action' => 'index'], ['class' => '', 'escape' => false]) ?>
</div>
<?php
$this->end();
?>

{% set associations = {'BelongsTo': [], 'HasOne': [], 'HasMany': [], 'BelongsToMany': []}|merge(associations) %}
{% set fieldsData = Bake.getViewFieldsData(fields, schema, associations) %}
{% set associationFields = fieldsData.associationFields %}
{% set groupedFields = fieldsData.groupedFields %}
{% set pK = '$' ~ singularVar ~ '->' ~ primaryKey[0] %}
<div class="container-fluid px-4">
    <div class="card">

        <div class="card-header">
            <?= h(${{ singularVar }}->{{ displayField }}) ?>
            <?= $this->Html->link('<i class="fas fa-edit"></i>' . __('&nbsp;Edit {{ singularHumanName }}'), ['action' => 'edit', ${{ singularVar }}->id],
            ['class' => 'btn btn-secondary btn-sm float-end', 'escape' => false]) ?>
        </div>

        <div class="card-body">
            <div class="{{ pluralVar }} view content">
                <div class="table-responsive">
                    <table class="table table-bordered table-sm">
                        {% if groupedFields['string'] %}
                            {% for field in groupedFields['string'] %}
                                {% if associationFields[field] is defined %}
                                    {% set details = associationFields[field] %}
                                    <tr>
                                        <th><?= __('{{ details.property|humanize }}') ?></th>
                                        <td><?= ${{ singularVar }}->has('{{ details.property }}') ? $this->Html->link(${{ singularVar }}->{{ details.property }}->{{ details.displayField }}, ['controller' => '{{ details.controller }}', 'action' => 'view', ${{ singularVar }}->{{ details.property }}->{{ details.primaryKey[0] }}]) : '' ?></td>
                                    </tr>
                                {% else %}
                                    <tr>
                                        <th><?= __('{{ field|humanize }}') ?></th>
                                        <td><?= h(${{ singularVar }}->{{ field }}) ?></td>
                                    </tr>
                                {% endif %}
                            {% endfor %}
                        {% endif %}
                        {% if associations.HasOne %}
                            {% for alias, details in associations.HasOne %}
                                <tr>
                                    <th><?= __('{{ alias|underscore|singularize|humanize }}') ?></th>
                                    <td><?= ${{ singularVar }}->has('{{ details.property }}') ? $this->Html->link(${{ singularVar }}->{{ details.property }}->{{ details.displayField }}, ['controller' => '{{ details.controller }}', 'action' => 'view', ${{ singularVar }}->{{ details.property }}->{{ details.primaryKey[0] }}]) : '' ?></td>
                                </tr>
                            {% endfor %}
                        {% endif %}
                        {% if groupedFields.number %}
                            {% for field in groupedFields.number %}
                                <tr>
                                    {% if field in ['id', 'guid', 'uuid', 'url', 'unc'] %}
                                        <th><?= __('{{ field|upper }}') ?></th>
                                    {% else %}
                                        <th><?= __('{{ field|humanize }}') ?></th>
                                    {% endif %}
                                    {% set columnData = Bake.columnData(field, schema) %}
                                    {% if columnData.null %}
                                        <td><?= ${{ singularVar }}->{{ field }} === null ? '' : $this->Number->format(${{ singularVar }}->{{ field }}) ?></td>
                                    {% else %}
                                        <td><?= $this->Number->format(${{ singularVar }}->{{ field }}) ?></td>
                                    {% endif %}
                                </tr>
                            {% endfor %}
                        {% endif %}
                        {% if groupedFields.date %}
                            {% for field in groupedFields.date %}
                                <tr>
                                    <th><?= __('{{ field|humanize }}') ?></th>
                                    <td><?= h(${{ singularVar }}->{{ field }}) ?></td>
                                </tr>
                            {% endfor %}
                        {% endif %}
                        {% if groupedFields.boolean %}
                            {% for field in groupedFields.boolean %}
                                <tr>
                                    <th><?= __('{{ field|humanize }}') ?></th>
                                    <td><?= ${{ singularVar }}->{{ field }} ? __('Yes') : __('No'); ?></td>
                                </tr>
                            {% endfor %}
                        {% endif %}
                    </table>
                    {% if groupedFields.text %}
                        {% for field in groupedFields.text %}
                            <div class="text">
                                <strong><?= __('{{ field|humanize }}') ?></strong>
                                <blockquote>
                                    <?= $this->Text->autoParagraph(h(${{ singularVar }}->{{ field }})); ?>
                                </blockquote>
                            </div>
                        {% endfor %}
                    {% endif %}
                </div>
            </div>
        </div>

    </div>
</div>


{% set relations = associations.BelongsToMany|merge(associations.HasMany) %}
{% for alias, details in relations %}
    {% set otherSingularVar = alias|variable %}
    {% set otherPluralHumanName = details.controller|underscore|humanize %}
    <div class="container-fluid px-4 mt-5">
        <div class="card related">

            <div class="card-header">
                <?= __('Related {{ otherPluralHumanName }}') ?>
            </div>

            <div class="card-body">
                <div class="{{ pluralVar }} index content">
                    <?php if (!empty(${{ singularVar }}->{{ details.property }})) : ?>
                    <div class="table-responsive">
                        <table class="table table-bordered table-sm">
                            <tr>
                                {% for field in details.fields %}
                                {% if field not in ['created', 'modified', 'meta'] %}
                                {% if field in ['id'] %}
                                    <th><?= __('{{ field|upper }}') ?></th>
                                {% else %}
                                    <th><?= __('{{ field|humanize }}') ?></th>
                                {% endif %}
                                {% endif %}
                                {% endfor %}
                                <th class="actions"><?= __('Actions') ?></th>
                            </tr>
                            <?php foreach (${{ singularVar }}->{{ details.property }} as ${{ otherSingularVar }}) : ?>
                            <tr>
                                {% for field in details.fields %}
                                {% if field not in ['created', 'modified', 'meta'] %}
                                    <td><?= h(${{ otherSingularVar }}->{{ field }}) ?></td>
                                {% endif %}
                                {% endfor %}
                                {% set otherPk = '$' ~ otherSingularVar ~ '->' ~ details.primaryKey[0] %}
                                <td class="actions">
                                    <?= $this->Html->link(__('View'), ['controller' => '{{ details.controller }}', 'action' => 'view', {{ otherPk|raw }}]) ?>
                                    <?= $this->Html->link(__('Edit'), ['controller' => '{{ details.controller }}', 'action' => 'edit', {{ otherPk|raw }}]) ?>
                                    <?= $this->Form->postLink(__('Delete'), ['controller' => '{{ details.controller }}', 'action' => 'delete', {{ otherPk|raw }}], ['confirm' => __('Are you sure you want to delete # {0}?', {{ otherPk|raw }})]) ?>
                                </td>
                            </tr>
                            <?php endforeach; ?>
                        </table>
                    </div>
                    <?php else: ?>
                    <div>
                        <p class="mb-0"><?= __('Sorry, no {{ otherPluralHumanName }} found.') ?></p>
                    </div>
                    <?php endif; ?>
                </div>
            </div>

        </div>
    </div>


{% endfor %}

